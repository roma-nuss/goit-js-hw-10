{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('[data-start]');\nconst datetimePicker = document.getElementById('datetime-picker');\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nlet timerInterval = null;\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const now = new Date();\n    const timeLeft = userSelectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(timerInterval);\n      iziToast.success({\n        title: 'Completed',\n        message: 'Countdown has finished!',\n      });\n      datetimePicker.disabled = false;\n    } else {\n      const timeComponents = convertMs(timeLeft);\n      updateTimer(timeComponents);\n    }\n  }, 1000);\n});\n"],"names":["startButton","datetimePicker","userSelectedDate","options","selectedDates","selectedDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimer","timerInterval","timeLeft","timeComponents"],"mappings":"+IAMA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,eAAe,iBAAiB,EAChE,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDN,EAAY,SAAW,KAEvBE,EAAmBG,EACnBL,EAAY,SAAW,GAE1B,CACH,EAEAO,EAAUN,EAAgBE,CAAO,EAEjC,SAASK,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAY,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtD,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCE,EAAeD,CAAO,CAC1B,CAEA,IAAII,EAAgB,KAEpBjB,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBC,EAAe,SAAW,GAE1BgB,EAAgB,YAAY,IAAM,CAEhC,MAAMC,EAAWhB,EADL,IAAI,KAGhB,GAAIgB,GAAY,EACd,cAAcD,CAAa,EAC3BX,EAAS,QAAQ,CACf,MAAO,YACP,QAAS,yBACjB,CAAO,EACDL,EAAe,SAAW,OACrB,CACL,MAAMkB,EAAiBX,EAAUU,CAAQ,EACzCF,EAAYG,CAAc,CAC3B,CACF,EAAE,GAAI,CACT,CAAC"}